Option Compare Text

Function ConInt(Material As String, TempHigh As Double, TempLow As Double) As Double

Dim temp As Double, temp1 As Double, temp2 As Double

Dim IParametersUpper(50) As Double
Dim IParametersLower(50) As Double
Dim IParameters(50) As Double
Dim IHeaders(50) As String
Dim IParamName As String
Dim IParamType As String
Dim ILowTemp As Double
Dim IHiTemp As Double
Dim steps As Double

Dim RRR As Double
' Debug.Print "CK1"
steps = Conductivity(Material, TempHigh) / Conductivity(Material, TempLow)
' Debug.Print "CK 2"
If (steps < 1) Then steps = 1 / steps
steps = 30 * steps
If (steps > 1000#) Then steps = 1000#
firststep = Log(TempHigh) / Log(10)
laststep = Log(TempLow) / Log(10)
steps = (firststep - laststep) / steps

Sign = 1#
If (TempHigh < TempLow) Then Sign = -1#

Set DataSource = ThisWorkbook.Worksheets("ConductivityParameters")

If (Mid(Material, 3, 3) = "RRR") Then
    If (Mid(Material, 1, 2) = "Al") Then I = 2
    If (Mid(Material, 1, 2) = "Cu") Then I = 3
    If (Mid(Material, 1, 2) = "Fe") Then I = 4
    If (Mid(Material, 1, 2) = "WW") Then I = 5
    RRR = Mid(Material, 6)
    IParameters(28) = RRR
Else
    For I = 1 To 100
        ' Loops through first 100 rows of sheet searching for Material in first column
        IParamName = DataSource.Cells(I, 1).Value
        If (IParamName = Material) Then Exit For
    Next I
    If (I = 100) Then
        ConInt = 0#
        Stop
    End If
End If

' Sets the index of the Material row
Index = I

For I = 1 To 35
    'junk = DataSource.Cells(Index, I + 5)
    'starts at the I+5 and moves right to collect all parameters
    Parameter = DataSource.Cells(Index, I + 5)
    IHeaders(I) = DataSource.Cells(1, I + 5)
    ' Check if the header is lowercase or uppercase and assign the parameter accordingly
    If IHeaders(I) = "" Then
        ' If header is empty, exit the loop
        Exit For
    End If
    If IHeaders(I) = "Erf Param" Then
        erfparam = Parameter
    End If
    If Asc(Left(IHeaders(I), 1)) >= 97 And Asc(Left(IHeaders(I), 1)) <= 122 Then
        IParametersLower(I) = Parameter
    ElseIf Asc(Left(IHeaders(I), 1)) >= 65 And Asc(Left(IHeaders(I), 1)) <= 90 Then
        IParametersUpper(I) = Parameter
    End If
Next I
    IParamType = DataSource.Cells(Index, 2)
    ILowTemp = DataSource.Cells(Index, 3)
    IHiTemp = DataSource.Cells(Index, 4)

ConInt = 0#
For temp = firststep To laststep Step -steps
    temp1 = 10# ^ temp
    temp2 = 10# ^ (temp - steps)
    ' Debug.Print "CHECKPOINT 1"
    Call ConCalc(temp1, IParamType, IParametersLower, IParametersUpper, erfparam, yint1)
    ' Debug.Print "CHECKPOINT 3"
    Call ConCalc(temp2, IParamType, IParametersLower, IParametersUpper, erfparam, yint2)
    yint = (yint1 + yint2) / 2
    xint = (temp1 - temp2) * Sign
    ConInt = ConInt + yint * xint
Next temp
I = 1 + 1
End Function